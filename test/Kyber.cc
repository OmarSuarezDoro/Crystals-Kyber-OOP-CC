/**
 * Universidad de La Laguna
 * Escuela Superior de Ingeniería y Tecnología
 * Grado en Ingeniería Informática
 * Trabajo de Fin de Grado - Kleptographic Attacks on Lattice-Based CryptoSystems
 *
 * @author Omar Suárez Doro
 * @date August 20 2024
 * @version v0.1.0
 * @brief This file contains the tests for the Kyber class
 */

#include <gtest/gtest.h>
#include "../src/Kyber/Kyber.h"


class KyberTest : public ::testing::Test {
 public:
  Polynomial<int> test_polynomial1 = Polynomial<int>(256);
  Polynomial<int> test_polynomial2 = Polynomial<int>(256);

 protected:
  virtual void SetUp() {
  
  }
  virtual void TearDown() {
    // Clean up the test cases
  }
};

TEST_F(KyberTest, TestOfCompressMethod) {
  Kyber kyber = Kyber(512, {174, 235, 237, 4, 156, 230, 183, 113, 158, 87, 51, 17, 12, 141, 127, 144, 110, 98, 145, 115, 31, 191, 206, 3, 94, 10, 14, 10, 6, 126, 95, 180});
  std::pair<Bytes, Bytes> pair = kyber.KeyGen();
  const std::string expected_hex1 = "f86827ca24cd2eb7643b920907e20675d69c47bac2b64b152040867fb172b6095b3c20618d85cb7050b2149a83e59c45f355acc214629dd22428a74ff99b065680893902427b0910850c28f7a250d5f2955d6b6c9ac42ad4169b369226a83a3459496f2c4c7615a8130ff44404bc6b9589045404b2cfea8dd4f8556419b8e1e41f54bb035d0336b36a81bd3105b87a8505a59397a113065b8f2decb51eb905e565951531c9324c31a67aca30a1624258a741b725b17b7bc19338b170b278e72ec048c0f33c2ae9d51a2289139081543898bca9e97a92830111c8361ce71df2b146082b3783411f27844b7a94408079a8765334b9b94aed490c8d0a30e6b83865f6af420833c8d9a99b0b5f2a25a183f07058ab4d1b25bc62f283574b1bd7eb5d4483803de3cc88b1c85094232b8a01ba4acae30c581decc6f203506b61059e5cab989414cd66555a13b8f8a0818d6c2b64990941ca06218c8998f1842921c9ca55ade731944692533fcc999f36ac770a09ab5abf1e5580e3ba52b182b6e9a067b9c96e47488f8da042ec988ba613c2e4f3a2398222d1281bfc7c9e5cc851f745a0dbaa069f8834d953b1aed53ffdd11e424a5dad948972f50b26e77f55e74e913bb80b36ca76268db5232bf0a74109313b09942f4316093f8a4ec7751e380a570e580c30213800fda54e424d433269c262a892762663b0b82059730fe31e1fe0055a386e8ada30c9b08189e2b205034917176c63745ebcd1ac09b16fd70483e035caaa84530d0733aa8b66fed68875d1498fda2013b3b9e4382f286658c2097ffaca8dd1f77f1c066bbd3702bb8b470a9c635df877e9ba5d8b696125a322b9955208c2a39e81cea940b181ba68d040c226152b88057ddbb3a11e54130130bab9ab56d7accc6b03b77e1c28f832c1c8d0928ed94486919c94713cb01c9cb13485e47a8a11d1c907bc74a34487e9d04d1829cb9a341e4a61a7dfb4032efc0b84ec6ffe1cb6733957e115279f2ba29c939e296129d62a1a8c8c9c08330b913984f3d07ce36b1202967217884c6da0bc5ac6287983696865063d480e30cc241f938822ca829c3639dea2c4e70da997fc7fc86acccbbbe54563d0657d81d32e4060d3";
  const std::string expected_hex2 = "f8b41f57f41c69e9274e25568d3c88ecb38d0a060170565a67f8772e31160bfc55dcd2c1e88167a603c157d882073b2b30e2774b9c800f58c9bb1a4d71a2aa05d6afe8b61fa40c523151c0c22b5a7c5984e8cc9e9733bea9018de880ada9313aee7418836a4fa1925f9e66c6e9a78577b20639a276649565aad31ebaeb4b99a8164d39a52be8c4d172c95014745fd4c668c1a71ed5cdf99cb0fba9c2ce17cbc7265ce7c696fd8a8ccc56c37c16891ea13facb0c5120c5c80a59acee581cb8633494270df3cc640790cd1e3be01ba74dd320e0f0c91e4fb6660495e2a5c3f3a31835c777b24438953e258dec4458e1680f7c39002b84b97aca031589ae29b9cc113436a5c3dca2962f3e5b0cd7558214bc7029b578e73539c492afcf8402ec668f1d81bed396bf3d38195bb23bcfb719671184c558f16a372fe035f66b83350d26e0d88945fb292b9907cda4b955ee7b731519eed92423ea42e709a229093bc2b0a79c3e0bfd582af740486838480094ab84df14134956e87e9186c1650852b995579ce4a8044213c3743c9addfcc1ad4c7b34ae7545862346c712d64baa26b8424e713ad04a17fc5a74b1dc04f38968a639a2bb76c35d973660b23ac69e6caaff188ba74704a502dec6c1b27d486989893cd415cf0c898726bcdcad743632262202a612637c6d594348d5908f9c77924451e25c30349eaa2b362011d436e15b432e1642323ca5b630b79ce36024f3cce67a9a88b53008482442f299914337fd58205340b6e7fe39d91864af1a47788b3c274a88088da3381d14b6fa7c1b4b0943a75bdfbc41dbf53a4bee507ba911fc5ea8e7c2278b5dc42c9e6622fe4ca6e683e0e81723ea63c48e36ab7b39e3e26991104a5d38c555510b26d24acb9d7c8879b6d287364ca39c4f2832eb8ac9759d633ca48975f523bd9f79830098d47d0015577447f8c5d97c77b68460d53fb217d948e8726a179ec9a78b06770dc60469990b507ce78a07858e9aaa39396538c2f0d1a935cbb126ac3011196ab1a077c3c52a3b4356e740b238efc2abfda67b59c3098dc6721640dd073a3f7b69bac1734";
  EXPECT_EQ(pair.first.FromBytesToHex(), expected_hex1);
  EXPECT_EQ(pair.second.FromBytesToHex(), expected_hex2);
}
