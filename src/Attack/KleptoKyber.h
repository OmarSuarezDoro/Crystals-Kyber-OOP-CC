/**
 * Universidad de La Laguna
 * Escuela Superior de Ingeniería y Tecnología
 * Grado en Ingeniería Informática
 * Trabajo de Fin de Grado - Kleptographic Attacks on Lattice-Based CryptoSystems
 *
 * @author Omar Suárez Doro
 * @date August 20 2024
 * @version v0.1.0
 * @brief This file contains the header declaration of methods of the KletoKyber methods 
 */

#pragma once
#include <cmath>

#include "../Kyber/Kyber.h"
#include "./cyphers/mceliece-348864.h"

const Bytes attacker_sk = Bytes(std::vector<int>{10, 134, 121, 136, 178, 38, 171, 226, 95, 163, 196, 119, 224, 33, 155, 202, 214, 22, 61, 230, 11, 45, 176, 43, 109, 115, 19, 204, 215, 70, 80, 198, 78, 14, 166, 123, 134, 153, 35, 211, 146, 104, 151, 201, 138, 221, 154, 13, 130, 100, 138, 42, 113, 131, 158, 204, 62, 67, 37, 122, 110, 51, 119, 33, 153, 59, 109, 209, 67, 161, 75, 33, 81, 234, 17, 197, 121, 114, 240, 169, 156, 253, 121, 189, 76, 177, 130, 249, 84, 188, 143, 53, 23, 147, 97, 84, 159, 128, 173, 221, 177, 170, 1, 196, 42, 193, 242, 85, 208, 5, 110, 80, 148, 110, 186, 82, 44, 77, 33, 125, 149, 98, 148, 186, 88, 117, 199, 149, 64, 59, 56, 205, 190, 188, 33, 209, 148, 130, 89, 8, 30, 140, 252, 14, 254, 52, 179, 13, 98, 175, 199, 114, 175, 41, 80, 207, 191, 236, 121, 81, 89, 103, 146, 134, 6, 205, 153, 177, 178, 139, 141, 170, 123, 207, 187, 232, 182, 121, 50, 103, 193, 146, 201, 22, 216, 177, 38, 216, 172, 47, 241, 140, 253, 145, 9, 25, 197, 130, 219, 156, 145, 88, 182, 107, 250, 187, 40, 255, 215, 15, 52, 185, 93, 19, 55, 171, 161, 20, 55, 156, 104, 13, 206, 146, 53, 218, 65, 114, 98, 220, 51, 207, 108, 146, 106, 154, 46, 93, 215, 115, 107, 202, 77, 125, 97, 198, 188, 251, 20, 223, 152, 119, 19, 131, 92, 161, 148, 123, 64, 210, 187, 160, 180, 105, 57, 164, 49, 222, 23, 203, 172, 164, 147, 208, 155, 88, 20, 120, 106, 16, 116, 144, 206, 217, 100, 154, 138, 121, 174, 105, 198, 78, 17, 56, 9, 64, 150, 208, 74, 155, 56, 202, 162, 144, 192, 109, 45, 203, 149, 111, 124, 156, 12, 168, 39, 210, 35, 142, 236, 129, 194, 187, 70, 37, 158, 122, 91, 205, 181, 88, 95, 72, 189, 19, 115, 8, 131, 192, 140, 139, 6, 57, 243, 148, 99, 221, 236, 1, 155, 85, 2, 253, 212, 173, 123, 138, 62, 219, 120, 79, 66, 88, 0, 40, 250, 85, 155, 149, 62, 197, 35, 173, 223, 73, 183, 181, 8, 36, 127, 230, 19, 36, 200, 91, 26, 10, 75, 6, 128, 165, 104, 122, 132, 137, 184, 146, 92, 37, 88, 224, 58, 146, 12, 100, 126, 151, 231, 25, 119, 131, 6, 224, 104, 61, 149, 27, 194, 142, 234, 33, 99, 184, 92, 75, 179, 128, 94, 177, 204, 98, 192, 150, 237, 0, 160, 255, 0, 119, 93, 104, 139, 236, 52, 113, 109, 196, 204, 25, 66, 181, 200, 98, 33, 44, 57, 194, 96, 188, 162, 110, 233, 86, 164, 44, 131, 186, 226, 194, 95, 59, 49, 252, 230, 8, 28, 10, 123, 196, 182, 67, 246, 212, 54, 226, 167, 55, 113, 66, 194, 252, 163, 91, 198, 83, 28, 31, 91, 91, 12, 69, 115, 70, 201, 58, 219, 145, 45, 121, 225, 204, 158, 35, 75, 116, 57, 111, 183, 36, 60, 154, 100, 151, 207, 85, 32, 11, 103, 153, 129, 18, 48, 233, 165, 1, 128, 91, 144, 181, 102, 139, 107, 209, 50, 197, 185, 19, 59, 106, 173, 239, 23, 147, 151, 246, 64, 134, 169, 118, 117, 19, 125, 178, 43, 17, 175, 48, 158, 129, 144, 88, 123, 195, 147, 90, 99, 149, 4, 70, 50, 166, 204, 130, 187, 249, 189, 114, 212, 182, 156, 215, 190, 82, 41, 68, 252, 107, 5, 196, 81, 116, 85, 227, 94, 123, 28, 100, 155, 216, 99, 214, 7, 37, 202, 3, 115, 168, 88, 188, 138, 171, 142, 232, 204, 133, 191, 100, 124, 221, 154, 115, 104, 64, 122, 40, 220, 11, 30, 104, 150, 118, 217, 201, 251, 124, 10, 65, 186, 35, 47, 55, 48, 87, 250, 49, 0, 173, 18, 83, 36, 141, 159, 41, 126, 193, 218, 149, 90, 87, 57, 205, 35, 30, 230, 20, 168, 24, 11, 187, 91, 107, 89, 6, 241, 5, 158, 153, 199, 99, 80, 84, 93, 245, 29, 9, 232, 178, 63, 198, 6, 6, 154, 5, 145, 117, 90, 79, 215, 138, 12, 26, 175, 151, 145, 103, 64, 3, 122, 165, 145, 199, 236, 233, 26, 1, 73, 47, 112, 80, 140, 24, 68, 109, 185, 86, 41, 118, 42, 123, 108, 161, 89, 1, 64, 122, 233, 247, 136, 170, 200, 149, 159, 69, 148, 11, 90, 95, 0, 74, 86, 171, 70, 42, 31, 178, 154, 116, 102, 120});
const Bytes attacker_pk = Bytes(std::vector<int>{148, 203, 189, 43, 182, 88, 248, 101, 150, 153, 20, 111, 40, 98, 154, 235, 231, 83, 88, 98, 8, 76, 108, 120, 155, 40, 177, 207, 64, 170, 141, 200, 1, 228, 243, 96, 238, 108, 41, 255, 162, 84, 162, 18, 46, 46, 92, 165, 47, 43, 76, 115, 149, 135, 62, 69, 191, 170, 153, 175, 200, 66, 180, 9, 170, 82, 121, 120, 97, 167, 81, 7, 224, 113, 196, 60, 245, 112, 125, 160, 44, 17, 122, 134, 40, 151, 130, 44, 136, 120, 201, 81, 77, 160, 200, 47, 237, 72, 19, 186, 70, 76, 164, 134, 78, 127, 130, 44, 2, 214, 99, 216, 37, 101, 29, 182, 55, 44, 201, 101, 130, 249, 11, 163, 199, 204, 86, 96, 75, 155, 91, 117, 97, 193, 51, 219, 73, 206, 131, 219, 51, 28, 16, 82, 24, 12, 199, 228, 66, 80, 38, 249, 36, 85, 198, 15, 135, 199, 134, 217, 199, 111, 33, 32, 100, 91, 181, 38, 161, 197, 60, 51, 167, 47, 49, 106, 47, 63, 86, 206, 167, 193, 58, 172, 19, 27, 43, 229, 31, 45, 135, 42, 101, 11, 11, 115, 187, 137, 224, 71, 168, 35, 22, 173, 242, 245, 128, 159, 22, 22, 66, 208, 61, 219, 44, 35, 166, 147, 56, 199, 198, 43, 157, 188, 173, 207, 4, 94, 203, 55, 116, 49, 195, 150, 190, 99, 153, 117, 28, 5, 159, 244, 1, 29, 236, 113, 238, 199, 116, 59, 40, 148, 105, 8, 184, 61, 108, 148, 16, 67, 8, 207, 240, 158, 51, 75, 178, 97, 65, 174, 232, 75, 201, 186, 132, 68, 54, 244, 205, 46, 240, 151, 27, 87, 178, 122, 11, 97, 186, 39, 98, 49, 87, 33, 192, 199, 101, 168, 140, 44, 248, 155, 47, 122, 1, 165, 77, 121, 41, 185, 11, 120, 124, 101, 28, 50, 18, 87, 201, 178, 119, 96, 27, 6, 56, 86, 74, 6, 180, 191, 123, 154, 142, 28, 249, 125, 55, 0, 124, 126, 146, 92, 127, 171, 129, 66, 90, 166, 217, 6, 160, 90, 104, 21, 223, 100, 58, 165, 58, 201, 150, 22, 45, 220, 251, 101, 102, 180, 61, 172, 50, 11, 14, 100, 108, 154, 249, 112, 96, 106, 140, 247, 179, 84, 51, 121, 10, 194, 66, 57, 162, 245, 164, 15, 68, 60, 66, 200, 181, 190, 18, 206, 73, 87, 136, 13, 85, 83, 58, 99, 121, 169, 57, 189, 165, 152, 194, 189, 121, 171, 199, 212, 53, 74, 74, 81, 116, 199, 58, 5, 99, 48, 199, 121, 174, 239, 228, 195, 85, 244, 183, 13, 204, 108, 245, 99, 170, 249, 231, 165, 61, 213, 21, 154, 85, 117, 204, 39, 53, 160, 183, 39, 175, 114, 156, 181, 244, 136, 142, 89, 109, 33, 193, 10, 67, 210, 28, 112, 134, 73, 161, 40, 110, 70, 145, 175, 1, 0, 7, 210, 130, 185, 204, 180, 73, 44, 166, 133, 109, 32, 136, 124, 104, 169, 209, 246, 58, 134, 232, 35, 38, 188, 176, 218, 124, 6, 166, 150, 38, 123, 140, 65, 205, 245, 86, 10, 35, 191, 19, 0, 39, 34, 50, 58, 212, 44, 3, 191, 204, 192, 116, 135, 22, 242, 85, 99, 247, 153, 148, 68, 184, 147, 9, 120, 135, 109, 204, 155, 82, 25, 193, 82, 34, 206, 34, 160, 123, 104, 55, 141, 135, 133, 140, 181, 193, 38, 49, 170, 124, 75, 6, 140, 182, 134, 88, 0, 241, 59, 200, 229, 81, 174, 216, 203, 128, 18, 4, 170, 217, 199, 115, 245, 56, 255, 232, 160, 237, 124, 74, 125, 136, 76, 134, 123, 115, 127, 72, 20, 45, 152, 174, 150, 162, 203, 205, 250, 96, 8, 20, 90, 237, 182, 78, 125, 54, 40, 183, 219, 205, 246, 152, 76, 183, 130, 197, 20, 244, 48, 13, 218, 151, 124, 54, 75, 217, 243, 24, 41, 102, 128, 155, 155, 125, 53, 87, 86, 69, 172, 166, 169, 146, 109, 189, 162, 1, 72, 114, 178, 53, 224, 22, 159, 233, 179, 13, 183, 175, 136, 101, 186, 193, 57, 119, 248, 245, 20, 192, 169, 46, 75, 74, 6, 179, 33, 58, 88, 248, 130, 28, 92, 3, 206, 75, 80, 122, 210, 58, 46, 44, 103, 113, 236, 77, 26, 82, 63, 180, 251, 1, 23, 183, 176, 178, 5, 69, 76, 235, 101, 111, 26, 98, 193, 34, 126, 250, 10, 160, 39, 164, 47, 6, 192, 8, 18, 219, 51, 253, 165, 42, 60, 36, 182, 150, 28, 4, 93, 36, 84, 51, 226, 110, 67, 171, 120, 96, 132, 16, 135, 51, 42, 40, 154, 110, 15, 100, 209, 11, 130, 0, 171, 10, 219, 143, 156, 205, 7, 147, 70, 45, 34});

class KleptoKyber : public Kyber {
 public:
  KleptoKyber(int option, Bytes attacker_pk, const std::vector<int>& seed = {});
  Bytes RunBackdoor();
  
 private:
  Bytes attacker_pk_;
  Bytes pk_bd_mceliece_;
  Bytes sk_bd_mceliece_;
  std::unique_ptr<Cypher> cypher_box = std::make_unique<McEliece_348864>();
};